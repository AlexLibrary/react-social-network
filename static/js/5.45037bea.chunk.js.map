{"version":3,"sources":["components/modules/reduxFormFields/index.js","utils/validators/index.js","components/modules/reduxFormFields/style.module.scss","components/Page/Main/Dialogs/style.module.scss","components/Page/Main/Dialogs/Form/style.module.scss","components/Page/Main/Dialogs/Form/index.js","components/Page/Main/Dialogs/index.js","hoc/withAuthRedirect.js","components/Page/Main/Dialogs/Container.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","reduxFormFields","Input","createField","name","component","placeholder","validators","text","validate","max","requiredField","value","maxLength10","length","module","exports","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","friendsElement","dialogPage","friends","map","obj","activeClassName","a_active","to","id","key","messagesElement","messages","message","dialogs","dialogs_wrapper","dialogs_wrapper_friends","values","sendMessage","textarea","mapStateToPropsForRedirect","state","isAuth","authPart","compose","connect","dispatch","newMessage","sendMessageActionCreator","Component","RedirectComponent","this","React","PageItemsDialogs"],"mappings":"kRAIaA,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCACnEC,EAAWH,GAAWC,EAC5B,OACE,yBAAKG,UAAWD,EAAQ,UAAME,IAAOC,gBAAb,YAAgCD,IAAOJ,OAAUI,IAAOC,iBAC9E,6BACE,8CAAcR,EAAWI,KAE1BC,GAAY,8BAAOF,KAIbM,EAAQ,SAAC,GAAmD,IAAjDT,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCAChEC,EAAWH,GAAWC,EAC5B,OACE,yBAAKG,UAAWD,EAAQ,UAAME,IAAOC,gBAAb,YAAgCD,IAAOJ,OAAUI,IAAOC,iBAC9E,6BACE,2CAAWR,EAAWI,KAEvBC,GAAY,8BAAOF,KAKbO,EAAc,SAACC,EAAMC,EAAWC,GAAlB,IAA+BC,EAA/B,uDAA4C,GAAIV,EAAhD,uDAAwD,GAAIW,EAA5D,uDAAmE,GAAIT,EAAvE,uDAAmF,GAAnF,OACzB,yBAAKA,UAAWA,GACd,kBAAC,IAAD,eACEK,KAAMA,EACNC,UAAWA,EACXC,YAAaA,EACbG,SAAUF,GACNV,IANR,IAMmBW,K,iCClCrB,oEAAO,IAKkBE,EALZC,EAAgB,SAAAC,GAC3B,IAAIA,EACJ,MAAO,qBAQIC,GALYH,EAKY,GALL,SAAAE,GAC9B,GAAIA,GAASA,EAAME,OAASJ,EAAK,MAAM,gBAAN,OAAuBA,M,oBCL1DK,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,MAAQ,uB,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,uBAAuB,gBAAkB,+BAA+B,wBAA0B,uCAAuC,SAAW,0B,oBCAhLD,EAAOC,QAAU,CAAC,KAAO,sB,4ICgBVC,cAAU,CAAEC,KAAM,uBAAlBD,EAXF,SAACpB,GACZ,OACE,0BAAME,UAAWC,IAAOkB,KAAMC,SAAUtB,EAAMuB,cAC5C,6BACE,kBAACC,EAAA,EAAD,CAAOjB,KAAK,WAAWC,UAAWb,IAAUc,YAAY,kBAAkBG,SAAU,CAACE,IAAeE,QAEtG,6BAAK,6CCsBIS,EA7BC,SAACzB,GAEf,IAAM0B,EAAiB1B,EAAM2B,WAAWC,QAAQC,KAAI,SAAAC,GAAG,OACrD,kBAAC,IAAD,CAASC,gBAAiB5B,IAAO6B,SAAUC,GAAE,mBAAcH,EAAII,IAAMC,IAAKL,EAAII,IAAKJ,EAAIvB,SAEnF6B,EAAkBpC,EAAM2B,WAAW/B,MAAMyC,SAASR,KAAI,SAAAC,GAAG,OAC7D,yBAAKK,IAAKL,EAAII,IAAKJ,EAAIQ,YAOzB,OACE,yBAAKpC,UAAWC,IAAOoC,SACrB,uCACA,yBAAKrC,UAAWC,IAAOqC,iBACrB,yBAAKtC,UAAWC,IAAOsC,yBACpBf,GAEH,6BACGU,EACD,kBAAC,EAAD,CAAMd,SAbQ,SAACoB,GACrB1C,EAAM2C,YAAYD,EAAOE,iB,wDCXvBC,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,SAASD,S,QCUVE,sBACbC,aAVsB,SAACJ,GAAD,MAAY,CAClCnB,WAAYmB,EAAMnB,eAEO,SAACwB,GAAD,MAAe,CACxCR,YAAa,SAACS,GACZD,EAASE,YAAyBD,UDHN,SAACE,GAAe,IAExCC,EAFuC,uKAIzC,OAAKC,KAAKxD,MAAM+C,OACT,kBAACO,EAAcE,KAAKxD,OADI,kBAAC,IAAD,CAAUiC,GAAI,eAJJ,GAEbwB,IAAMH,WAOtC,OAAOJ,YAAQL,EAARK,CAAoCK,KCF9BN,CAGbS","file":"static/js/5.45037bea.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './style.module.scss'\nimport { Field } from 'redux-form';\n\nexport const Textarea = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <textarea {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\nexport const Input = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <input {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const createField = (name, component, placeholder, validators = [], props = {}, text = \"\", className = \"\") => (\n  <div className={className}>\n    <Field\n      name={name}\n      component={component}\n      placeholder={placeholder}\n      validate={validators}\n      {...props} /> {text}\n  </div>\n)\n\n","export const requiredField = value => {\n  if (value) return undefined;\n  return 'Field is required';\n}\n\nexport const maxLength = max => value => {\n  if (value && value.length > max) return `Max length > ${max}`\n  return undefined;\n}\n\nexport const maxLength10 = maxLength(10)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reduxFormFields\":\"style_reduxFormFields__3ce72\",\"error\":\"style_error__3ESqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"style_dialogs__1vrKZ\",\"dialogs_wrapper\":\"style_dialogs_wrapper__2WO0X\",\"dialogs_wrapper_friends\":\"style_dialogs_wrapper_friends__1HTNP\",\"a_active\":\"style_a_active__IjBYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__3L2ps\"};","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../../../modules/reduxFormFields'\nimport { requiredField, maxLength10 } from '../../../../../utils/validators'\nimport styles from './style.module.scss'\n\nconst Form = (props) => {\n  return (\n    <form className={styles.form} onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='textarea' component={Textarea} placeholder='Write a post...' validate={[requiredField, maxLength10]} />\n      </div>\n      <div><button>Send</button></div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'dialogs-add-message' })(Form)\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from './style.module.scss'\nimport Form from \"./Form\"\n\nconst Dialogs = (props) => {\n\n  const friendsElement = props.dialogPage.friends.map(obj =>\n    <NavLink activeClassName={styles.a_active} to={`/dialogs/${obj.id}`} key={obj.id}>{obj.name}</NavLink>\n  )\n  const messagesElement = props.dialogPage.input.messages.map(obj =>\n    <div key={obj.id}>{obj.message}</div>\n  )\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.textarea);\n  }\n\n  return (\n    <div className={styles.dialogs}>\n      <h1>Dialogs</h1>\n      <div className={styles.dialogs_wrapper}>\n        <div className={styles.dialogs_wrapper_friends}>\n          {friendsElement}\n        </div>\n        <div>\n          {messagesElement}\n          <Form onSubmit={addNewMessage} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.authPart.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\n      return <Component {...this.props} />\n    }\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n}\n","import PageItemsDialogs from \".\";\nimport { sendMessageActionCreator } from '../../../../reducers/reducer_dialogs'\nimport { connect } from \"react-redux\"\nimport { withAuthRedirect } from '../../../../hoc/withAuthRedirect';\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => ({\n  dialogPage: state.dialogPage\n})\nconst mapDispatchToProps = (dispatch) => ({\n  sendMessage: (newMessage) => {\n    dispatch(sendMessageActionCreator(newMessage));\n  }\n})\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(PageItemsDialogs);\n"],"sourceRoot":""}