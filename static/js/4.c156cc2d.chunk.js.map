{"version":3,"sources":["components/modules/reduxFormFields/index.js","utils/validators/index.js","components/modules/reduxFormFields/style.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Page/Main/Profile/About/style.module.scss","components/Page/Main/Profile/style.module.scss","components/Page/Main/Profile/Posts/style.module.scss","components/Page/Main/Profile/AddPost/style.module.scss","components/Page/Main/Profile/Posts/index.js","components/Page/Main/Profile/Posts/Container.js","components/Page/Main/Profile/AddPost/index.js","components/Page/Main/Profile/AddPost/Container.js","components/Page/Main/Profile/About/ProfileStatusWithHooks.js","components/Page/Main/Profile/About/ProfileDataForm.js","components/Page/Main/Profile/About/index.js","components/Page/Main/Profile/index.js","components/Page/Main/Profile/Container.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","reduxFormFields","Input","createField","name","component","placeholder","validators","text","validate","max","requiredField","value","maxLength10","length","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Posts","SetPosts","posts","map","obj","posts_items","key","id","src","profile","photos","small","alt","message","posts_likes","likes","connect","state","AddPostFormRedux","reduxForm","form","addPost","onSubmit","handleSubmit","Field","AddPost","values","textarea","inputValue","dispatch","newPost","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","status_output","onClick","status_input","autoFocus","onBlur","updateStatus","onChange","e","target","cancelEdit","editProfile","editProfile_summaryError","type","keys","contacts","ProfileData","isOwner","toEditMode","fullName","aboutMe","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","About","about","large","files","savePhoto","initialValues","formData","saveProfile","then","Profile","userId","Preloader","ProfileContainer","this","match","params","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","React","Component","compose","authPart","isAuth","withRouter"],"mappings":"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","file":"static/js/4.c156cc2d.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './style.module.scss'\nimport { Field } from 'redux-form';\n\nexport const Textarea = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <textarea {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\nexport const Input = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <input {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const createField = (name, component, placeholder, validators = [], props = {}, text = \"\", className = \"\") => (\n  <div className={className}>\n    <Field\n      name={name}\n      component={component}\n      placeholder={placeholder}\n      validate={validators}\n      {...props} /> {text}\n  </div>\n)\n\n","export const requiredField = value => {\n  if (value) return undefined;\n  return 'Field is required';\n}\n\nexport const maxLength = max => value => {\n  if (value && value.length > max) return `Max length > ${max}`\n  return undefined;\n}\n\nexport const maxLength10 = maxLength(10)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reduxFormFields\":\"style_reduxFormFields__3ce72\",\"error\":\"style_error__3ESqE\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"style_about__2w6o7\",\"status\":\"style_status__3zHin\",\"status_output\":\"style_status_output__3NI24\",\"status_input\":\"style_status_input__s1iEG\",\"editProfile_summaryError\":\"style_editProfile_summaryError__aWS24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"style_profile__1dxLa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"style_posts__3fAfL\",\"posts_items\":\"style_posts_items__39ezC\",\"posts_items_likes\":\"style_posts_items_likes__21Hqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"style_addPost__iDIXg\"};","import React from \"react\";\nimport styles from './style.module.scss'\n\nconst Posts = (props) => {\n\n  const SetPosts = () => {\n    const post = props.posts.map(obj =>\n      <div className={styles.posts_items} key={obj.id}>\n        <img src={props.profile.photos.small ? props.profile.photos.small : \"https://placem.at/people?w=70&h=70&random=1\"} alt=\"\" />\n        {obj.message}\n        <div className={styles.posts_likes}>\n          likes: {obj.likes}\n        </div>\n      </div>\n    )\n    return post\n  }\n\n  return (\n    <div className={styles.posts}>\n      <h2>My posts</h2>\n      <SetPosts />\n    </div>\n  )\n}\n\nexport default Posts;\n","import Posts from \".\";\nimport { connect } from \"react-redux\"\n\nconst mapStateToProps = (state) => ({\n  posts: state.profile.posts,\n  profile: state.profile.profile\n})\n\nexport default connect(mapStateToProps, {})(Posts);;\n","import React from \"react\";\nimport styles from './style.module.scss'\nimport { reduxForm, Field } from \"redux-form\";\nimport { requiredField, maxLength10 } from \"../../../../../utils/validators\";\nimport { Textarea } from \"../../../../modules/reduxFormFields\";\n\n\nconst AddPost = (props) => {\n\n  const addPost = (values) => {\n    props.addPost(values.textarea);\n  }\n\n  return (\n    <AddPostFormRedux onSubmit={addPost} />\n  )\n}\n\nconst AddPostForm = (props) => {\n  return (\n    <form className={styles.addPost} onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='textarea' component={Textarea} placeholder='Write a post...' validate={[requiredField, maxLength10]} />\n      </div>\n      <div><button>Send</button></div>\n    </form>\n  )\n}\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm' })(AddPostForm)\n\nexport default AddPost;\n","import { addPostActionCreator } from \"../../../../../reducers/reducer_profile\";\nimport AddPost from \".\";\nimport { connect } from \"react-redux\"\n\nconst mapStateToProps = (state) => ({\n  inputValue: state.profile.inputValue\n})\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (newPost) => {\n    dispatch(addPostActionCreator(newPost));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);;\n","import React, { useState, useEffect } from \"react\";\nimport styles from './style.module.scss'\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const changeStatus = (e) => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <div className={styles.status} >\n      <span>Status:</span>\n      {!editMode &&\n        <div className={styles.status_output} onClick={activateEditMode}>\n          <span>{props.status || '------'}</span>\n        </div>\n      }\n      {editMode &&\n        <div className={styles.status_input}>\n          <input autoFocus={true} value={status} onBlur={deactivateEditMode} onChange={changeStatus} />\n        </div>\n      }\n    </div >\n  )\n\n}\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport styles from './style.module.scss'\nimport { createField, Input, Textarea } from \"../../../../modules/reduxFormFields\";\nimport { reduxForm } from \"redux-form\";\nimport { requiredField } from \"../../../../../utils/validators\";\n// initialValues\nconst ProfileDataForm = ({ profile, cancelEdit, handleSubmit, error }) => {\n  return (\n    <form onSubmit={handleSubmit} className={styles.editProfile}>\n      <div><button>save</button></div>\n      <div><button onClick={cancelEdit}>cancelEdit</button></div>\n      <div className={styles.editProfile_summaryError}>\n        {error && error}\n      </div>\n      <h2>fullName</h2>\n      {createField('fullName', Input, 'fullName', [requiredField])}\n      <h2>Обо мне</h2>\n      {createField('aboutMe', Input, 'aboutMe', [requiredField])}\n\n      <h2>lookingForAJob</h2>\n      {createField('lookingForAJob', Input, '', [requiredField], { type: 'checkbox' })}\n      <h2>lookingForAJobDescription</h2>\n      {createField('lookingForAJobDescription', Textarea, 'My professional skills', [requiredField])}\n\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => (\n        <div key={key}>\n          <b>{key}:</b> {createField(`contacts.${key}`, Input, key, [], { type: 'url' })}\n        </div>\n      ))}\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'editProfile' })(ProfileDataForm);\n","import React, { useState } from \"react\";\nimport styles from './style.module.scss'\nimport ProfileStatus from './ProfileStatusWithHooks'\nimport ProfileDataForm from \"./ProfileDataForm\";\n\n\nconst About = (props) => {\n  const [editMode, setEditMode] = useState(false);\n\n  const handlePhotoSelected = (e) => {\n    if (e.target.files.length)\n      props.savePhoto(e.target.files[0])\n  }\n\n  const onSubmit = (formData) => {\n    props.saveProfile(formData).then(\n      () => { setEditMode(false) }\n    )\n  }\n\n  return (\n    <div className={styles.about}>\n      <div>\n        <img src={props.profile.photos.large || \"https://placem.at/people?w=300&h=300&random=1\"} alt='largePhoto' />\n        {props.isOwner && <input type='file' onChange={handlePhotoSelected} />}\n      </div>\n      <div>\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\n      </div>\n      {editMode\n        ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} cancelEdit={() => setEditMode(false)} />\n        : <ProfileData profile={props.profile} isOwner={props.isOwner} toEditMode={() => setEditMode(true)} />}\n    </div>\n  )\n}\n\nconst ProfileData = ({ profile, isOwner, toEditMode }) => {\n  return (\n    <div>\n      {isOwner && <div><button onClick={toEditMode}>Edit</button></div>}\n      <h1>{`${profile.fullName}`}</h1>\n      <h2>Обо мне</h2>\n      {`${profile.aboutMe}`}\n      <h2>Контакты</h2>\n      <pre>\n        <div>{`   facebook:    ${profile.contacts.facebook}`}</div>\n        <div>{`   website:     ${profile.contacts.website}`}</div>\n        <div>{`   vk:          ${profile.contacts.vk}`}</div>\n        <div>{`   twitter:     ${profile.contacts.twitter}`}</div>\n        <div>{`   instagram:   ${profile.contacts.instagram}`}</div>\n        <div>{`   youtube:     ${profile.contacts.youtube}`}</div>\n        <div>{`   github:      ${profile.contacts.github}`}</div>\n        <div>{`   mainLink:    ${profile.contacts.mainLink}`}</div>\n      </pre>\n      {profile.lookingForAJob\n        ? <div><h2>Ищу работу</h2> {profile.lookingForAJobDescription}</div>\n        : undefined\n      }\n    </div>\n  )\n}\n\nexport default About;\n","import React from \"react\";\nimport styles from './style.module.scss'\nimport Preloader from '../../../modules/Preloader'\nimport Posts from \"./Posts/Container\";\nimport AddPost from \"./AddPost/Container\";\nimport About from \"./About\";\n\nconst Profile = (props) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div className={styles.profile}>\n      <h1>Id_{props.profile.userId}</h1>\n      <About\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n      <Posts />\n      <AddPost />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React from \"react\";\nimport PageItemsProfile from \".\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../../../reducers/reducer_profile'\nimport { withRouter } from \"react-router-dom\";\n// import { withAuthRedirect } from \"../../../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.userId\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile()\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <PageItemsProfile isOwner={!this.props.match.params.userId} {...this.props} />\n      </>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile.profile,\n  status: state.profile.status,\n  userId: state.authPart.userId,\n  isAuth: state.authPart.isAuth\n})\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter,\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}