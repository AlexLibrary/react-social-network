{"version":3,"sources":["components/modules/reduxFormFields/index.js","components/modules/reduxFormFields/style.module.scss","utils/validators/index.js","components/Page/Main/Login/style.module.scss","components/Page/Main/Login/Container.js"],"names":["Textarea","input","meta","touched","error","props","hasError","className","styles","reduxFormFields","Input","createField","name","component","placeholder","validators","text","validate","module","exports","max","requiredField","value","maxLength10","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","login_rememberMe","login_summaryError","connect","state","isAuth","authPart","login","to","formData","email","password"],"mappings":"kRAIaA,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCACnEC,EAAWH,GAAWC,EAC5B,OACE,yBAAKG,UAAWD,EAAQ,UAAME,IAAOC,gBAAb,YAAgCD,IAAOJ,OAAUI,IAAOC,iBAC9E,6BACE,8CAAcR,EAAWI,KAE1BC,GAAY,8BAAOF,KAIbM,EAAQ,SAAC,GAAmD,IAAjDT,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCAChEC,EAAWH,GAAWC,EAC5B,OACE,yBAAKG,UAAWD,EAAQ,UAAME,IAAOC,gBAAb,YAAgCD,IAAOJ,OAAUI,IAAOC,iBAC9E,6BACE,2CAAWR,EAAWI,KAEvBC,GAAY,8BAAOF,KAKbO,EAAc,SAACC,EAAMC,EAAWC,GAAlB,IAA+BC,EAA/B,uDAA4C,GAAIV,EAAhD,uDAAwD,GAAIW,EAA5D,uDAAmE,GAAIT,EAAvE,uDAAmF,GAAnF,OACzB,yBAAKA,UAAWA,GACd,kBAAC,IAAD,eACEK,KAAMA,EACNC,UAAWA,EACXC,YAAaA,EACbG,SAAUF,GACNV,IANR,IAMmBW,K,oBCjCrBE,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,MAAQ,uB,iCCD3E,oEAAO,IAKkBC,EALZC,EAAgB,SAAAC,GAC3B,IAAIA,EACJ,MAAO,qBAQIC,GALYH,EAKY,GALL,SAAAE,GAC9B,GAAIA,GAASA,EAAME,OAASJ,EAAK,MAAM,gBAAN,OAAuBA,M,oBCL1DF,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,iBAAmB,gCAAgC,mBAAqB,oC,iCCDvH,gGA0BMM,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAjBT,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcxB,EAAY,EAAZA,MAE7B,OACE,0BAAMyB,SAAUD,GACbjB,YAAY,QAASD,IAAO,WAAY,CAACW,KAAgB,CAAES,KAAM,UACjEnB,YAAY,WAAYD,IAAO,cAAe,CAACW,KAAgB,CAAES,KAAM,aACvEnB,YAAY,aAAcD,IAAO,KAAM,KAAM,CAAEoB,KAAM,YAAc,cAAxD,UAA0EtB,IAAOuB,mBAC7F,yBAAKxB,UAAWC,IAAOwB,oBACpB5B,GAASA,GAEZ,6BACE,8CA0BO6B,uBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,SAASD,UAGe,CAAEE,WAA3BJ,EAlBG,SAAC5B,GAMjB,OAAIA,EAAM8B,OAAe,kBAAC,IAAD,CAAUG,GAAG,aAG/B,yBAAK/B,UAAWC,IAAO6B,OAC5B,qCACA,kBAACZ,EAAD,CAAgBI,SAVD,SAACU,GAEhBlC,EAAMgC,MAAME,EAASC,MAAOD,EAASE","file":"static/js/6.83e79710.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './style.module.scss'\nimport { Field } from 'redux-form';\n\nexport const Textarea = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <textarea {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\nexport const Input = ({ input, meta: { touched, error }, ...props }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? `${styles.reduxFormFields} ${styles.error}` : styles.reduxFormFields}>\n      <div>\n        <input {...input} {...props} />\n      </div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const createField = (name, component, placeholder, validators = [], props = {}, text = \"\", className = \"\") => (\n  <div className={className}>\n    <Field\n      name={name}\n      component={component}\n      placeholder={placeholder}\n      validate={validators}\n      {...props} /> {text}\n  </div>\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reduxFormFields\":\"style_reduxFormFields__3ce72\",\"error\":\"style_error__3ESqE\"};","export const requiredField = value => {\n  if (value) return undefined;\n  return 'Field is required';\n}\n\nexport const maxLength = max => value => {\n  if (value && value.length > max) return `Max length > ${max}`\n  return undefined;\n}\n\nexport const maxLength10 = maxLength(10)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"style_login__1-kJ6\",\"login_rememberMe\":\"style_login_rememberMe__1vPQI\",\"login_summaryError\":\"style_login_summaryError__3JOon\"};","import React from 'react'\nimport styles from './style.module.scss'\nimport { reduxForm } from 'redux-form'\nimport { login } from '../../../../reducers/reducer_auth'\nimport { Input, createField } from '../../../modules/reduxFormFields'\nimport { requiredField } from '../../../../utils/validators'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst Login = ({ handleSubmit, error }) => {\n  // console.log(props);\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField('email', Input, 'email...', [requiredField], { type: 'email' })}\n      {createField('password', Input, 'Password...', [requiredField], { type: 'password' })}\n      {createField('rememberMe', Input, null, null, { type: 'checkbox' }, \"remember me\", `${styles.login_rememberMe}`)}\n      <div className={styles.login_summaryError}>\n        {error && error}\n      </div>\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(Login)\n\nconst LoginForm = (props) => {\n  const onSubmit = (formData) => {\n    // console.log(formData.email, formData.password);\n    props.login(formData.email, formData.password)\n  }\n\n  if (props.isAuth) return <Redirect to='/profile' />\n\n\n  return <div className={styles.login}>\n    <h1>LOGIN</h1>\n    <LoginReduxForm onSubmit={onSubmit} />\n  </div>\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.authPart.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(LoginForm)\n"],"sourceRoot":""}